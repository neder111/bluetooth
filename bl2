 
import machine
import time
import ubinascii
import ujson
from google.cloud import speech_v1
from google.cloud.speech_v1 import enums
from machine import I2C, Pin
from micropython import const
 
# Setup LED
led = Pin(21, Pin.OUT)
 
# Setup microphone
i2c = I2C(sda=Pin(22), scl=Pin(23), freq=10000)
addr = i2c.scan()[0]
i2c.writeto(addr, bytes([0x04, 0x80, 0x63]))
i2c.writeto(addr, bytes([0x04, 0x81, 0xc2]))
 
# Setup Google Cloud Speech-to-Text client
client = speech_v1.SpeechClient.from_service_account_json('<path-to-service-account-key>.json')
 
while True:
    # Listen for voice command
    i2c.writeto(addr, bytes([0x04, 0x83]))
    time.sleep(1)
    data = i2c.readfrom(addr, 4)
    size = ((data[0] & 0x3F) << 8) + data[1]
    if size > 0:
        audio = i2c.readfrom(addr, size)
 
        # Convert audio data to text using Google Cloud Speech-to-Text
        audio_bytes = ubinascii.b2a_base64(audio).decode('utf-8')
        config = speech_v1.types.RecognitionConfig(
            encoding=enums.RecognitionConfig.AudioEncoding.LINEAR16,
            sample_rate_hertz=16000,
            language_code='en-US')
        audio = speech_v1.types.RecognitionAudio(content=audio_bytes)
        response = client.recognize(config, audio)
 
        # Parse the text and control the LED
        for result in response.results:
            text = result.alternatives[0].transcript.lower()
            if 'turn on the light' in text:
                led.on()
            elif 'turn off the light' in text:
                led.off()
